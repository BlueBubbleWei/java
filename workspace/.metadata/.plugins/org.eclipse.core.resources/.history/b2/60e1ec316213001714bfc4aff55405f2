package cn.mybuffer.demo;

import java.io.IOException;
import java.io.Reader;

public class MyBufferedReader {
//	1、持有一个流对象
	private Reader reader;
//	因为是缓冲区对象，所以内部必须维护了数组
	private char[]  buffer=new char[1024];
	
//	定义脚标
	private int index=0;
//	定义变量，记录数组中元素的个数
	private int count=0;
//	一初始化就必须明确被缓冲的对象
	public MyBufferedReader(Reader reader) {
		super();
		this.reader = reader;
	}
	
//	读取一个字符的方法，而且是高效的
	/**
	 * @throws IOException 
	 * 
	 */
	private int myRead() throws IOException {
//		通过被缓冲流对象的方法，就可以将设备上的数据存储到数组中
		if(count==0){
			count=reader.read(buffer);
			index=0;
		}

		
		char ch=buffer[index];
		index++;//脚标每取一次自增
		count--;//既然取出一个，数组的数量要减少，一旦减到0，就再从设备上获取一批数据存储到数组中
		return ch;
	}
}
